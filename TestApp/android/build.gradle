// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "29.0.2"
        minSdkVersion = 21
        compileSdkVersion = 29
        targetSdkVersion = 29
    }
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath('com.android.tools.build:gradle:3.5.2')
    }
}

apply from: '../../AppCenterReactNativeShared/android/publish.gradle'

def readFromLocalProperties(propertyName) {
    // Load credentials from local.properties file.
    File localProperties = project.rootProject.file('local.properties')
    if (localProperties.exists()) {
        Properties properties = new Properties()
        properties.load(localProperties.newDataInputStream())
        return properties.getProperty(propertyName)
    }
    return null
}

allprojects {
    repositories {
        // maven {
        //     credentials {
        //         username = readFromLocalProperties('AZURE_USERNAME')
        //         password = readFromLocalProperties('AZURE_PASSWORD')
        //     }
        //     url "https://msmobilecenter.pkgs.visualstudio.com/_packaging/AppCenter/maven/v1/"
        // }
        mavenLocal()
        google()
        jcenter()
        mavenCentral()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        maven { url 'https://www.jitpack.io' }

        // force dependency versions on all subprojects
        configurations.all {
            resolutionStrategy {

                // use 0.9.0 to fix crash on Android 11: https://github.com/facebook/SoLoader/issues/59
                force "com.facebook.soloader:soloader:0.9.0"
            }
        }
    }
}

subprojects {
    afterEvaluate { project ->
        if (project.hasProperty("android")) {
            android {
                // Force all the submodules to use the specified compileSdkVersion and buildToolsVersion.
                compileSdkVersion rootProject.ext.compileSdkVersion
                buildToolsVersion rootProject.ext.buildToolsVersion
            }
        }
    }
}
